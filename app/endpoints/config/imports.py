from app.models.Error import Error

RESPONSES = {
    200: {
        "description": "Вставка или обновление прошли успешно.",
    },
    400: {
        "model": Error,
        "description": "Невалидная схема документа или входные данные не верны.",
        "content": {
            "application/json": {
                "examples": {
                    "response": {
                        "value": {
                            "code": 400,
                            "message": "Validation Failed"
                        }
                    }
                }
            }
        }
    },
    422: {}
}
DESCRIPTION = """Импортирует новые товары и/или категории.
Товары/категории импортированные повторно обновляют текущие.
Изменение типа элемента с товара на категорию или с категории на товар не допускается.
Порядок элементов в запросе является произвольным.

- uuid товара или категории является уникальным среди товаров и категорий
- родителем товара или категории может быть только категория
- принадлежность к категории определяется полем parentId
- товар или категория могут не иметь родителя
- название элемента не может быть null
- у категорий поле price должно содержать null
- цена товара не может быть null и должна быть больше либо равна нулю.
- при обновлении товара/категории обновленными считаются **все** их параметры
- при обновлении параметров элемента обязательно обновляется поле **date** в соответствии с временем обновления
- в одном запросе не может быть двух элементов с одинаковым id
- дата должна обрабатываться согласно ISO 8601 (такой придерживается OpenAPI). Если дата не удовлетворяет данному формату, необходимо отвечать 400.

Гарантируется, что во входных данных нет циклических зависимостей и поле updateDate монотонно возрастает. 
Гарантируется, что при проверке передаваемое время кратно секундам."""